{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "SFU Commute",
    "description": "REST API documentation. http://54.69.64.180/",
    "termsOfService": "http://swagger.io/terms/"
  },
  "basePath": "/",
  "tags" : [
    {
      "name": "Authentication",
      "description": "API paths for user authentication"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/signup": {
       "post": {
          "tags": ["Authentication"],
          "description": "Sign up new user.",
          "operationId": "",
          "produces": [
            "application/json"
          ],
          "parameters": [
              {
                "name": "body",
                "in": "body",
                "description": "New user",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/signup-signin"
                }
            }
          ],
          "responses": {
            "201": {
              "description": "Returns access_token and JSON data of the new user.",
              "schema": {
                  "required": [
                    "success",
                    "user",
                    "access_token"
                  ],
                   "properties": {
                    "success": {
                      "type": "boolean",
                      "example" : "true"
                    },
                    "user": {
                      "type" : "object",
                      "required": [
                        "_id",
                        "email",
                        "password",
                        "created"
                      ],
                      "schema": {
                        "properties": {
                          "_id": {
                            "type" : "ObjectId",
                            "example" : "57fddbf0eb86a305b4589e3e"
                          },
                          "email": {
                            "type": "string",
                            "example": "username@gmail.com"
                          },
                          "password": {
                            "type":"string",
                            "example": "$2a$10$6cMEnet27am14E5VgcOKOOtrYsaJD2Z358heNCXpCrDjEeMdmQa2G"
                          },
                          "created": {
                            "type": "dateTime",
                            "example": "2016-10-12T06:45:04.468Z"
                          }
                        }
                      }
                    },
                    "access_token": {
                      "required":true,
                      "type": "string",
                      "example": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJuYW1lQGdtYWlsLmNvbSIsImlhdCI6MTQ3NjI1NjkwOSwiZXhwIjoxNDgxNDQwOTA5fQ._0Wnc5ZWLZt2k4jHJdJ-Jz80ijDs5QIxDRqPAuzpEik"
                    }
                  }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                 "$ref": "#/definitions/error-response"
              }
            },
            "403": {
              "description": "Database error (field validation failed).",
              "schema": {
                 "$ref": "#/definitions/database-error-response"
              }
            }
          }
        }
    },
    "/signin": {
        "post":{
          "tags":["Authentication"],
          "description":"let user sign in",
          "operationId":"",
          "produces": [
            "application/json"
          ],
          "parameters":[
              {
                "name": "body",
                "in": "body",
                "description": "User credentials",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/signup-signin"
                }
              }
            ],
          "responses": {
            "200": {
              "description": "Returns access_token and JSON data of the user.",
              "schema":{
                "$ref":"#/definitions/signup-response"
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                 "$ref": "#/definitions/error-response"
              }
            },
            "401": {
              "description": "User not found or wrong password.",
              "schema": {
                 "$ref": "#/definitions/user-not-found"
              }
            },
            "401": {
              "description": "User not found or wrong password.",
              "schema": {
                 "$ref": "#/definitions/password-not-match"
              }
            },
            "403": {
              "description": "Database query error.",
              "schema": {
                 "$ref": "#/definitions/database-error-response"
              }
            }
          }
        }
    },
    "/verify/text": {
        "post":{
          "tags":["Authentication"],
          "description":"Send users' phone number to verify (Usually this is the step 1/2 for phone number verification)",
          "operationId":"",
          "produces": [
            "application/json"
          ],
          "parameters":[
              {
                "name": "body",
                "in": "body",
                "description": "Phone number to be verified",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/verify-phone"
                }
              },
              {
                "name": "Authorization",
                "in": "header",
                "description": "attach access_token in field Authorization in header",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/access_token"
                }
              }
            ],
          "responses": {
            "200": {
              "description": "Returns user data include phone number",
              "schema":{
                "required": [
                  "success",
                  "user"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "true"
                  },
                  "user": {
                    "$ref": "#/definitions/user"
                  }
                }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string",
                    "example": "Error: The request is missing correct access token."
                  }
                }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema":{
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string",
                    "example": "Missing parameter METHOD(email or text)."
                  }
                }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema":{
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string",
                    "example": "Missing parameter:  11-digit phone number."
                  }
                }
              }
            },
            "500": {
              "description": "Failed to send text (SMS provider problem).",
              "schema":{
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "Database query error.",
              "schema": {
                 "$ref": "#/definitions/database-error-response"
              }
            }
          }
        }
    },
    "/verify/text?code={code}":{
        "get":{
          "tags":["Authentication"],
          "description":"Check user's input: 4 digit code. (Usually this is the step 2/2 for phone number verification)",
          "operationId":"",
          "produces": [
            "application/json"
          ],
          "parameters":[
              {
                "name": "query",
                "in": "query",
                "description": "verify 4-digit code",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/verify-code"
                }
              },
              {
                "name": "Authorization",
                "in": "header",
                "description": "attach access_token in field Authorization in header",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/access_token"
                }
              }
            ],
          "responses": {
            "200": {
              "description": "Phone number successfully verified!",
              "schema":{
                "required": [
                  "success",
                  "msg"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "true"
                  },
                  "msg": {
                    "type": "string",
                    "example": "Phone number successfully verified!"
                  }
                }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string",
                    "example": "Error: The request is missing correct access token."
                  }
                }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string",
                    "example": "Missing parameter: 4-digit verfication code."
                  }
                }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string",
                    "example": "The code is incorrect."
                  }
                }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string",
                    "example": "The code is expired."
                  }
                }
              }
            },
            "403": {
              "description": "User not found.",
              "schema": {
                 "$ref": "#/definitions/user-not-found"
              }
            },
            "500": {
              "description": "Database query error.",
              "schema": {
                 "$ref": "#/definitions/database-error-response"
              }
            }
          }
        }
    },
    "/forgot": {
       "post": {
          "tags": ["Authentication"],
          "description": "Send an email to user who wish to reset password. The reset link in the email is: http://54.69.64.180/reset?token=${resetPasswordToken} ",
          "operationId": "",
          "produces": [
            "application/json"
          ],
          "parameters": [
              {
                "name": "body",
                "in": "body",
                "description": "New user",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/forgot"
                }
            }
          ],
          "responses": {
            "200": {
              "description": "Sends an email to user and returns reset password token.",
              "schema": {
                  "required": [
                    "success",
                    "resetPasswordToken"
                  ],
                   "properties": {
                    "success": {
                      "type": "boolean",
                      "example" : "true"
                    },
                    "resetPasswordToken": {
                      "required":true,
                      "type": "string",
                      "example": "476593603612855"
                    }
                  }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                 "$ref": "#/definitions/error-response"
              }
            },
            "403": {
              "description": "Database error (field validation failed).",
              "schema": {
                 "$ref": "#/definitions/database-error-response"
              }
            }
          }
        }
    },
    "/reset?token={reset-password-token}":{
        "get":{
          "tags":["Authentication"],
          "description":"Reset password html page",
          "operationId":"",
          "produces": [
            "application/json"
          ]
        }
    },
    "/reset": {
        "post":{
          "tags":["Authentication"],
          "description":"Reset user's password (Implemented in web page)",
          "operationId":"",
          "produces": [
            "application/json"
          ],
          "parameters":[
              {
                "name": "body",
                "in": "body",
                "description": "reset password token and new password",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/reset-parameter"
                }
              }
            ],
          "responses": {
            "200": {
              "description": "Return boolean success",
              "schema":{
                "required": [
                  "success"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "true"
                  }
                }
              }
            },
            "400": {
              "description": "Failed requests.",
              "schema": {
                "required": [
                  "success",
                  "error"
                ],
                 "properties": {
                  "success": {
                    "type": "boolean",
                    "example" : "false"
                  },
                  "error": {
                    "type": "string",
                    "example": "Missing parameter:  reset password token."
                  }
                }
              }
            },
            "403": {
              "description": "Database query error.",
              "schema": {
                 "$ref": "#/definitions/database-error-response"
              }
            }
          }
        }
    }
  },
  "definitions": {
    "signup-signin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "required":true,
          "type": "string",
          "example": "username@gmail.com"
        },
        "password": {
          "required":true,
          "type":"string",
          "minLength":6,
          "example": "password"
        }
      }
    },
    "forgot": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "required":true,
          "type": "string",
          "example": "username@gmail.com"
        }
      }
    },
    "signup-response": {
        "required": [
          "success",
          "user",
          "access_token"
        ],
        "properties": {
          "success": {
            "required":true,
            "type": "boolean",
            "example": true
          },
          "user": {
            "required":true,
            "type": "schema",
            "$ref": "#/definitions/user"
          },
          "access_token": {
            "required":true,
            "type": "string",
            "example": "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXJuYW1lQGdtYWlsLmNvbSIsImlhdCI6MTQ3NjI1NjkwOSwiZXhwIjoxNDgxNDQwOTA5fQ._0Wnc5ZWLZt2k4jHJdJ-Jz80ijDs5QIxDRqPAuzpEik"
          }
      }
    },
    "user": {
      "required": [
        "_id",
        "email",
        "password",
        "created",
        "phone"
      ],
        "properties": {
            "_id": {
              "type" : "ObjectId",
              "example" : "57fddbf0eb86a305b4589e3e"
            },
            "email": {
              "type": "string",
              "example": "username@gmail.com"
            },
            "password": {
              "type":"string",
              "example": "$2a$10$6cMEnet27am14E5VgcOKOOtrYsaJD2Z358heNCXpCrDjEeMdmQa2G"
            },
            "created": {
              "type": "dateTime",
              "example": "2016-10-12T06:45:04.468Z"
            },
            "phone": {
              "$ref": "#/definitions/phone"
            }
        }
    },
    "phone": {
        "properties": {
            "number": {
              "required": false,
              "type" : "string",
              "example" : "17781231234"
            },
            "verification" : {
              "type": "schema",
              "$ref": "#/definitions/phone-verification"
            }
        }
    },
    "phone-verification" : {
       "properties": {
        "verified": {
          "type": "boolean",
          "example" : "false"
        },
        "code": {
          "type": "string",
          "example" : "6385"
        },
        "expire": {
          "type": "dateTime",
          "example" : "2016-10-12T06:45:04.468Z"
        }
      }
    },
    "error-response" : {
      "required": [
        "success",
        "error"
      ],
       "properties": {
        "success": {
          "type": "boolean",
          "example" : "false"
        },
        "error": {
          "type": "string",
          "example" : "Please enter your email and password."
        }
      }
    },
    "user-not-found" : {
      "required": [
        "success",
        "error"
      ],
       "properties": {
        "success": {
          "type": "boolean",
          "example" : "false"
        },
        "error": {
          "type": "string",
          "example" : "Authentication failed. User not found."
        }
      }
    },
    "password-not-match" : {
      "required": [
        "success",
        "error"
      ],
       "properties": {
        "success": {
          "type": "boolean",
          "example" : "false"
        },
        "error": {
          "type": "string",
          "example" : "Authentication failed. Passwords does not match."
        }
      }
    },
    "database-error-response" : {
      "required": [
        "success",
        "error"
      ],
       "properties": {
        "success": {
          "type": "boolean",
          "example" : "false"
        },
        "error": {
          "type": "object"
        }
      }
    },
    "verify-phone" : {
      "required": [
        "phone"
      ],
       "properties": {
          "phone": {
            "type": "string",
            "example" : "17781231234"
          }
      }
    },
    "access_token" : {
      "required": [
        "Authorization"
      ],
       "properties": {
          "Authorization": {
            "type": "string",
            "example" : "JWT eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImsuaGU5MzNAZ21haWwuY29tIiwiaWF0IjoxNDc3NTQ5OTU2LCJleHAiOjE0ODI3MzM5NTZ9.520ilyXHRhssAhoZuDLFPkQHuCjqS2_JqY7mUzKmSa0"
          }
      }
    },
    "reset-parameter" : {
      "required": [
        "token",
        "password"
      ],
       "properties": {
          "token": {
            "type": "string",
            "example" : "476593603612855"
          },
          "password": {
            "type": "string",
            "example" : "password"
          }
      }
    },
    "verify-code" : {
      "required": [
        "code"
      ],
       "properties": {
          "code": {
            "type": "string",
            "example" : "2852"
          }
      }
    }
  }
}
